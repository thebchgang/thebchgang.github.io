{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","Completionist","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledImg","img","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","MAX_MINT_PER_TX","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","LAUNCH_DATE","END_DATE","CONFIG","SET_CONFIG","claimNFTs","Number","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","isMobile","alt","src","borderRadius","border","textAlign","color","paddingBottom","maxWidth","marginTop","Date","fontSize","fontWeight","fontFamily","target","href","length","substring","width","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","onChange","parseInt","incrementMintAmount","toUTCString","className","date","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c74de71a.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Countdown from 'react-countdown';\nimport { BrowserView, MobileView, isBrowser, isMobile } from 'react-device-detect';\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nconst Completionist = () => \"\";\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 50, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 50, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 50, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--secondary-text);\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 50, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 50, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 50, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n  margin-top: 1em;\n`;\n\nexport const StyledImg = styled.img`\n  // box-shadow: 0px 4px 0px -2px rgba(250, 50, 250, 0.3);\n  border: none;\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--accent-text);\n  text-decoration: none;\n`;\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Please select how many NFTs you want to mint in one transcation.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    MAX_MINT_PER_TX: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n    LAUNCH_DATE: \"\",\n    END_DATE: \"\",\n  });\n\n\n  const claimNFTs = async () => {\n    await dispatch(fetchData(blockchain.account));\n    if (mintAmount + Number(data.totalSupply) > CONFIG.MAX_SUPPLY) {\n      setFeedback(\"Not enough NFTs left to mint!\");\n      return false;\n    }\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong. Please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `Hooray! You successfully minted some ${CONFIG.NFT_NAME} NFTs! After the big reveal, you can see how your NFTs look on ${CONFIG.MARKETPLACE}.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > CONFIG.MAX_MINT_PER_TX) {\n      newMintAmount = CONFIG.MAX_MINT_PER_TX;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const setMintAmountInput = (e) => {\n    let newMintAmount = parseInt(e.target.value);\n    if (newMintAmount > CONFIG.MAX_MINT_PER_TX) {\n      newMintAmount = CONFIG.MAX_MINT_PER_TX;\n    }\n    else if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? (isMobile ? \"/config/images/bgMobile.jpg\" : \"/config/images/bg.jpg\") : null}\n      >\n        {/* <StyledLogo alt={\"logo\"} src={\"/config/images/logo.jpg\"} /> */}\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"preview\"} src={\"/config/images/preview.gif\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"none\",\n              // boxShadow: \"0px 4px 0px -2px rgba(250,50,250,0.3)\",\n            }}\n          >\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--secondary-text)\",\n                paddingBottom: \"1em\",\n                maxWidth: \"450px\",\n              }}\n            >\n              <img\n                style={{\n                  marginTop: \"1em\",\n                  maxWidth: \"100%\",\n                }}\n                src=\"/config/images/logo.png\"\n                alt=\"The BCH Gang\" />\n              <p\n                style={{\n                  marginTop: \"1em\",\n                }}\n              >The BCH gang fights against the evil central bankers for money -- not just for themselves but for everybody. The BCH gang wants a separation of money and state. They believe that money should not be centrally controlled and printed at will. They want to establish a new kind of sound money that can be used to store value and to handle everyday transactions. They want a true peer-to-peer electronic cash for the world.\n              </p>\n              <p\n                style={{\n                  marginTop: \"1em\",\n                }}\n              >\n                The BCH Gang NFT collection is coming to #SmartBCH soon! Stay tuned!\n              </p>\n              {/* <p\n                style={{\n                  marginTop: \"1em\",\n                }}\n              >\n                To read more about our vision and roadmap, check out our <StyledLink target={\"_blank\"} href=\"https://read.cash/@worldofmasksbch/background-and-roadmap-d9b03e0c\">\n                  release announcement\n                </StyledLink>.\n              </p> */}\n            </s.TextDescription>\n            {new Date() > new Date(CONFIG.LAUNCH_DATE) ? (\n              <>\n                <s.TextTitle\n                  style={{\n                    textAlign: \"center\",\n                    fontSize: 50,\n                    fontWeight: \"bold\",\n                    fontFamily: \"Liberation Mono\",\n                    color: \"var(--accent-text)\",\n                  }}\n                >\n                  {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{\n                    textAlign: \"center\",\n                    fontFamily: \"Liberation Mono\",\n                    color: \"var(--secondary-text)\",\n                  }}\n                >\n                  <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                    {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n                  </StyledLink>\n                </s.TextDescription>\n                <s.SpacerSmall />\n              </>\n            ) : null}\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                  <img style={{\n                    width: \"192px\",\n                  }} src=\"/oasis_logo.svg\" alt=\"Oasis\" />\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                {/* <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n                >\n                  The special offer for the first 2,500 Pixel Guy Club NFTs: 1 NFT for 0.01 BCH  \n                </s.TextTitle> */}\n                <s.SpacerSmall />\n                {/* <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n                >\n                  Minting begin and minting price will be announced soon!\n                  </s.TextTitle>  */}\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n                >\n                  1 {CONFIG.SYMBOL} can be minted for {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL} plus gas fees.\n                </s.TextTitle>\n                {/*<s.SpacerSmall />\n                 <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--secondary-text)\" }}\n                >\n                  To show our appreciation for the community we won't increase the minting price. Originally the price was planned to increase every 2,500 minted NFTs by 0.005 BCH per NFT.\n                </s.TextTitle>*/}\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                  blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--secondary-text)\",\n                      }}\n                    >\n                      Please connect MetaMask to the {CONFIG.NETWORK.NAME} network and then connect to this website.\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--secondary-text)\",\n                      }}\n                    >\n                      If you are on a computer, please unlock your MetaMask browser extension first and then refresh this page before clicking the \"connect\" button.\n                    </s.TextDescription>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--secondary-text)\",\n                      }}\n                    >\n                      <s.SpacerSmall />\n                      You can mint up to {CONFIG.MAX_MINT_PER_TX} NFTs in one transaction.\n                    </s.TextDescription>\n\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--primary-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    {new Date() > new Date(CONFIG.LAUNCH_DATE) ? (\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--primary-text)\",\n                        }}\n                      >\n                        {feedback}\n                      </s.TextDescription>\n                    ) : null}\n\n                    <s.SpacerMedium />\n                    {/* {new Date() < new Date(CONFIG.END_DATE) ? ( */}\n                    {new Date() > new Date(CONFIG.LAUNCH_DATE) ? (\n\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledRoundButton\n                          style={{ lineHeight: 0.4 }}\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            decrementMintAmount();\n                          }}\n                        >\n                          -\n                        </StyledRoundButton>\n                        <s.SpacerMedium />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          <input type={\"number\"} style={{ width: \"50px\", padding: \"5px\" }} value={mintAmount} onChange={setMintAmountInput} />\n                        </s.TextDescription>\n                        <s.SpacerMedium />\n                        <StyledRoundButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            incrementMintAmount();\n                          }}\n                        >\n                          +\n                        </StyledRoundButton>\n                      </s.Container>\n                    ) : null}\n                    <s.SpacerSmall />\n                    {/* {new Date() < new Date(CONFIG.END_DATE) ? ( */}\n                    {new Date() > new Date(CONFIG.LAUNCH_DATE) ? (\n                      <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                        <StyledButton\n                          disabled={claimingNft ? 1 : 0}\n                          onClick={(e) => {\n                            e.preventDefault();\n                            claimNFTs();\n                            getData();\n                          }}\n                        >\n                          {claimingNft ? \"BUSY\" : \"MINT\"}\n                        </StyledButton>\n                      </s.Container>\n                    ) : (\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          fontSize: 28,\n                          color: \"var(--primary-text)\",\n                        }}\n                      >\n                        The minting begins {new Date(CONFIG.LAUNCH_DATE).toUTCString()}.\n                        {/* The minting ended {new Date(CONFIG.END_DATE).toUTCString()}. */}\n                      </s.TextDescription>\n                    )}\n                  </>\n                )}\n              </>\n            )}\n            {/* {new Date() < new Date(CONFIG.END_DATE) ? (\n            <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        fontSize: 28,\n                        color: \"var(--primary-text)\",\n                      }}\n                    >\n                      Minting is possible until {new Date(CONFIG.END_DATE).toUTCString()}.\n                    </s.TextDescription>\n                    ) : (\n                      null\n                    )} */}\n            <div className=\"countdown\" style={{\n              textAlign: \"center\",\n              fontSize: 40,\n              fontWeight: \"bold\",\n              fontFamily: \"Liberation Mono\",\n              color: \"var(--primary-text)\",\n            }}>\n              {/* <Countdown\n                date={new Date(CONFIG.END_DATE)}\n              >\n                <Completionist />\n              </Countdown> */}\n\n              <Countdown\n                date={new Date(CONFIG.LAUNCH_DATE)}\n              >\n                <Completionist />\n              </Countdown>\n            </div>\n            <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"90%\" }}>\n              <s.SpacerMedium />\n              <s.SpacerMedium />\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--secondary-text)\",\n                }}\n              >\n                We have set the gas limit to {CONFIG.GAS_LIMIT} so that the smart contract can\n                successfully mint the {CONFIG.NFT_NAME} NFTs. We recommend not to lower the\n                gas limit. Otherwise the minting might fail.\n                Don't worry about overspending: Unused gas is sent back to your wallet.\n              </s.TextDescription>\n              <s.SpacerSmall />\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 20,\n                  color: \"var(--accent-text)\",\n                }}\n              >\n                Please note: Once you make the purchase, you cannot undo this action.\n              </s.TextDescription>\n\n              <s.SpacerSmall />\n              {/* <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 20,\n                  color: \"var(--accent-text)\",\n                }}\n              > */}\n              <StyledLink target={\"_blank\"} href=\"http://thebchgang.cash\">Learn more about the BCH Gang project on  our website</StyledLink>\n              {/* </s.TextDescription> */}\n            </s.Container>\n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"preview\"}\n              src={\"/config/images/preview.gif\"}\n            />\n          </s.Container>\n\n        </ResponsiveWrapper>\n        <s.SpacerSmall />\n        <s.Container\n          jc={\"center\"}\n          ai={\"center\"}\n          style={{\n            margin: \"0\",\n            padding: \"0\",\n            color: \"#efefef\",\n          }}\n        >\n          {/* <a href=\"https://github.com/zquestz/reapers.cash\" target=\"_blank\"><img src=\"/github-alt-brands.svg\" /></a> */}\n          <div className=\"social\">\n            <a href=\"https://t.me/TheBCHGang\" target=\"_blank\"><img src=\"/telegram-plane-brands.svg\" /></a>\n            <a href=\"http://twitter.com/thebchgang\" target=\"_blank\"><img src=\"/twitter-brands.svg\" /></a>\n            {/* <a href=\"https://www.instagram.com/nft_club_official/\" target=\"_blank\"><img src=\"/instagram-brands.svg\" /></a> */}\n          </div>\n        </s.Container>\n\n      </s.Container>\n\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}